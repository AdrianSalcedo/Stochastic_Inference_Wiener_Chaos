print(c(j,alphas[j],betas[j]))
}
}
return(rbind(alphas,betas))
}
################################################################################
# M_bridges_Exact_OU=function(M,a,b,delta,n,thetaOU,sigmaOU)
# {
#   MOU=matrix(0,nrow=M,ncol=(n+1))
#   for(i in 1:M){
#     MOU[i,]=Exact_OU(a,b,delta,n,thetaOU,sigmaOU)
#   }
#   return(MOU)
# }
comp_Bridge=function(X,nbri,delta,alpha,beta)
{
#cantidad de puentes
k=length(X)-1
cb=matrix(0,nrow=2,ncol=k*(nbri)+1) #numeric(k*(nbri)+1)
for(s in 1:2){
for(i in 1:k)
{
ini=(i-1)*nbri+1
fin=i*nbri+1
cb[s,ini:fin]= Exact_OU(X[i],X[i+1],delta,nbri,alpha,beta)
}
}
cb <-colMeans(cb)
return(cb)
}
##############################################
Exact_OU=function(a,b,delta,n,thetaOU,sigmaOU)
{
Z=numeric(n+1)
T=delta*n
X=OU_EULER(a,n,T,thetaOU,sigmaOU)
ts=seq(0,delta*n,by=delta)
for(i in 1:(n+1))
{
Z[i]=X[i]+(b-X[n+1])*(exp(thetaOU*ts[i])-exp(-thetaOU*ts[i]))/
(exp(thetaOU*ts[n+1])-exp(-thetaOU*ts[n+1]))
}
return(Z)
}
################################################################################
###simula trayectorias de OU usando Euler
#parametros
#horizonte de tiempo
T=1
#discretización
n=1000
#tiempos
tim=seq(0,T,by=T/n)
delta=T/n
#deriva
alpha=1
#difusion
beta=1
#punto inicial
x0=0
#numero de puntos en el puente
nb=10
#tamaño de muestra para alpha
M=1000
#periodo de calentamiento
K=1
X<- OU_EULER(x0,n,T,alpha,beta)
alpha_cont = OU_alpha(X,delta)
alpha_cont
Est_alpha<-Est_stefano_alpha(X,delta)
Est_alpha
Est_stefano_beta(X,Est_alpha,delta)
X<- OU_EULER(x0,n,T,alpha,beta)
alpha_cont = OU_alpha(X,delta)
alpha_cont
Est_alpha<-Est_stefano_alpha(X,delta)
Est_alpha
Est_stefano_beta(X,Est_alpha,delta)
X<- OU_EULER(x0,n,T,alpha,beta)
alpha_cont = OU_alpha(X,delta)
alpha_cont
Est_alpha<-Est_stefano_alpha(X,delta)
Est_alpha
Est_stefano_beta(X,Est_alpha,delta)
X<- OU_EULER(x0,n,T,alpha,beta)
alpha_cont = OU_alpha(X,delta)
alpha_cont
Est_alpha<-Est_stefano_alpha(X,delta)
Est_alpha
Est_stefano_beta(X,Est_alpha,delta)
X<- OU_EULER(x0,n,T,alpha,beta)
alpha_cont = OU_alpha(X,delta)
alpha_cont
Est_alpha<-Est_stefano_alpha(X,delta)
Est_alpha
Est_stefano_beta(X,Est_alpha,delta)
Xd <- Data_reduction(X,10)
No <- length(Xd)-1
deltad <- T/No
#plot data path
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
#Q<-comp_Bridge(Xd,nb,deltad/nb,2,0.1)
parameters <-Gibb_OU_Est(Xd,nb,deltad,2,0.1,K,M)
rowMeans(parameters)
Y = runif(1,0,1)
Y = runif(1,0,1)
? runif()
Y = runif(2,0,1)
Y = runif(1,0,1)
? max
max(5:1,pi)
max(5:1)
max(6:1)
6:1
max(x*x,0,1)
Y = runif(1,0,5)
Y = runif(1,0,5)
()
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Y <= Z
X= c()
X= c()
Y<=Z
while (Y<=Z) {
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Y <= Z
if (Y<=Z) {
X[i] = Y
}
}
i=1
X= c()
i=1
while (Y<=Z) {
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Y <= Z
if (Y<=Z) {
X[i] = Y
}
}
?while
? while()
? while()
? while
()
Y <= Z
while(Y > Z){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Y > Z
if (Y<=Z) {
X[i] = Y
}
}
X= c()
for (i in 1:20){
}
while(Y > Z){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Y > Z
if (Y<=Z) {
X[i] = Y
}
}
1:20
for (i in 1:20){
}
while(Y > Z){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Y > Z
if (Y<=Z) {
X[i] = Y
}
}
X= c()
for (i in 1:20){
while(Y > Z){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Y > Z
if (Y<=Z) {
X[i] = Y
}
}
}
X= c()
Y<=Z
Condition = TRUE
X= c()
for (i in 1:20){
Condition = TRUE
while(Condition){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Condition = Y > Z
if (Y<=Z) {
X[i] = Y
}
}
}
X_acep = NULL
X_rjct = NULL
j=1
for (i in 1:100){
Condition = TRUE
while(Condition){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Condition = Y > Z
if (Y<=Z) {
X_acep[i] = Y
}
X_rjct[j] = Y
j=j+1
}
}
# Metodo de Aceptacion-Rechazo Versión Uniformes.
#
#
#
X_acep = NULL
X_rjct = NULL
j=1
for (i in 1:500){
Condition = TRUE
while(Condition){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Condition = Y > Z
if (Y<=Z) {
X_acep[i] = Y
}
X_rjct[j] = Y
j=j+1
}
}
# Metodo de Aceptacion-Rechazo Versión Uniformes.
#
#
#
X_acep = NULL
X_rjct = NULL
j=1
for (i in 1:500){
Condition = TRUE
while(Condition){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Condition = Y > Z
if (Y<=Z) {
X_acep[i] = Y
}
X_rjct[j] = Y
j=j+1
}
}
# Metodo de Aceptacion-Rechazo Versión Uniformes.
#
#
#
X_acep = NULL
X_rjct = NULL
j=1
for (i in 1:500){
Condition = TRUE
while(Condition){
Y = runif(1,0,5)
Z = max(c(1.2,1,0.9,0.7))
Condition = Y > Z
if (Y<=Z) {
X_acep[i] = Y
}
X_rjct[j] = Y
j=j+1
}
}
X_acep = NULL
X_rjct = NULL
j=1
for (i in 1:500){
Condition = TRUE
while(Condition){
Y = runif(1,0,5)
Z = runif(1,0,max(c(1.2,1,0.9,0.7)))
Condition = Y > Z
if (Y<=Z) {
X_acep[i] = Y
}
X_rjct[j] = Y
j=j+1
}
}
plot(X_acep)
plot(density(X_acep))
pi
setwd("C:/Users/Usuario1/Desktop/OU_Bayes_Bridges/parameters_unknows")
library(ggplot2)
library(dplyr)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta1.0_T1_lambda1_0.75lambda2_2350.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")), col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta1.0_T1_lambda1_0.75lambda2_2350.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta0.5_T1_lambda1_1.4lambda2_4650.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")),ylab = "", col="red",lwd = 2)
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.5")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.5_beta0.5_T1_lambda1_2.38lambda2_4750.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.5")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.5")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.5_beta1.0_T1_lambda1_1.4lambda2_1700.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.5")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.8_beta1.0_T1_lambda1_0.9lambda2_1650.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.8")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta0.8_T1_lambda1_1.0001lambda2_2000.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.8")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.1_beta0.1_T1_lambda1_0.5lambda2_320.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.1")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.1")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.1_beta0.1_T1_lambda1_0.5lambda2_320.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.1[,3])
d2$y = 1/(d2$y/max(d2$y))
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.1")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.1")),ylab = "", col="red",lwd = 2)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.1")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.1")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta0.8_T1_lambda1_1.0001lambda2_2000.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.8")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta0.8_T1_lambda1_1.0001lambda2_2000.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.8")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.8_beta1.0_T1_lambda1_0.9lambda2_1650.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.8")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.5_beta1.0_T1_lambda1_1.4lambda2_1700.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.5")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha0.5_beta0.5_T1_lambda1_2.38lambda2_4750.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=0.5")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.5")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta0.5_T1_lambda1_1.4lambda2_4650.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=0.5")),ylab = "", col="red",lwd = 2)
X_data0.1 <- read.csv("Chaos_Data_alpha1.0_beta1.0_T1_lambda1_0.75lambda2_2350.csv",header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(1/(X_data0.1[,3]))
d2$y = d2$y/max(d2$y)
#layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
par(mfrow = c(1, 2))
plot(d1,main = "", xlab=expression(paste(alpha, "=1.0")), col="black",lwd = 2)
plot(d2,main = "", xlab=expression(paste(beta, "=1.0")),ylab = "", col="red",lwd = 2)
setwd("C:/Users/Usuario1/Desktop/OU_Bayes_Bridges/beta_unknow/Nueva carpeta")
library(ggplot2)
library(dplyr)
X_data0.1 <- read.csv("Chaos_Data_alpha0.1_beta1.0_T10_lambda805.csv",header = T)
X_data0.5 <- read.csv("Chaos_Data_alpha0.5_beta1.0_T10_lambda805.csv", header = T)
X_data0.8 <- read.csv("Chaos_Data_alpha0.8_beta1.0_T10_lambda840.csv", header = T)
X_data1.0 <- read.csv("Chaos_Data_alpha1.0_beta1.0_T10_lambda815.csv", header = T)
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.5[,2])
d2$y = d2$y/max(d2$y)
d3 = density(X_data0.8[,2])
d3$y = d3$y/max(d3$y)
d4 = density(X_data1.0[,2])
d4$y = d4$y/max(d4$y)
layout(matrix(c(1,2,3,4), nrow = 2, ncol = 2, byrow = TRUE))
plot(d1,main = "", xlab=expression(paste(beta, "=0.1")), col="black",lwd = 2)
plot(d2, col="red",lwd = 2,main = "",xlab = expression(paste(beta, "=0.5")))
plot(d3, col="blue",lwd = 2,main = "",xlab = expression(paste(beta, "=0.8")))
plot(d4, col="darkgreen",lwd = 2,main = "",xlab = expression(paste(beta, "=1.0")))
d1 = density(X_data0.1[,2])
d1$y = d1$y/max(d1$y)
d2 = density(X_data0.5[,2])
d2$y = d2$y/max(d2$y)
d3 = density(X_data0.8[,2])
d3$y = d3$y/max(d3$y)
d4 = density(X_data1.0[,2])
d4$y = d4$y/max(d4$y)
layout(matrix(c(1,1,1,1), nrow = 2, ncol = 2, byrow = TRUE))
plot(d1,main = "", xlab=expression(paste(beta, "=1.0")),
col="black",lwd = 2, ylim=c(0,500))
lines(d2, col="red",lwd = 2)
lines(d3, col="blue",lwd = 2)
lines(d4, col="darkgreen",lwd = 2)
legend("topright",
legend = c(expression(paste(alpha," = 0.1,", lambda, " = 805")),
expression(paste(alpha," = 0.5,", lambda, " = 805")),
expression(paste(alpha," = 0.8,", lambda, " = 840")),
expression(paste(alpha," = 1.0,", lambda, " = 815"))),lty = c(1, 1),
col = c("black","red","blue","darkgreen"),cex = 1.0,lwd = 3)
layout(matrix(c(1,1,1,1), nrow = 2, ncol = 2, byrow = TRUE))
plot(d1,main = "", xlab=expression(paste(beta, "=1.0")),
col="black",lwd = 2)
lines(d2, col="red",lwd = 2)
lines(d3, col="blue",lwd = 2)
lines(d4, col="darkgreen",lwd = 2)
legend("topright",
legend = c(expression(paste(alpha," = 0.1,", lambda, " = 805")),
expression(paste(alpha," = 0.5,", lambda, " = 805")),
expression(paste(alpha," = 0.8,", lambda, " = 840")),
expression(paste(alpha," = 1.0,", lambda, " = 815"))),lty = c(1, 1),
col = c("black","red","blue","darkgreen"),cex = 1.0,lwd = 3)
