M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#estimacion bayesiana del OU caso 1
source("Ou-Chaos-functions-bayes-both.r")
source("EM_Ou_Estimador_Stefano.r")
source('Ou_Chaos_functions.R')
library('truncnorm')
#parámetros del proceso
alpha <- 1.001  # parametro fijo
beta0 <- 1.1    # parametro de inicialización
beta <- 1.2  # parametro real
Ti<- 1          # Horizonte de tiempo
TF <- Ti        #
n<- 1000        # número de puntos en el proceso original
delta <- Ti/n   # tamaño de paso del proceso original
TiempoC<-seq(0, Ti, length.out = n+1)
TL<-length(TiempoC)
Cond = TRUE
x0 <- 0         #condicion inicial de SDE
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.00000001
lambda_2 <- 900 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#estimacion bayesiana del OU caso 1
source("Ou-Chaos-functions-bayes-both.r")
source("EM_Ou_Estimador_Stefano.r")
source('Ou_Chaos_functions.R')
library('truncnorm')
#parámetros del proceso
alpha <- 1.001  # parametro fijo
beta0 <- 1.1    # parametro de inicialización
beta <- 1.2  # parametro real
Ti<- 1          # Horizonte de tiempo
TF <- Ti        #
n<- 1000        # número de puntos en el proceso original
delta <- Ti/n   # tamaño de paso del proceso original
TiempoC<-seq(0, Ti, length.out = n+1)
TL<-length(TiempoC)
Cond = TRUE
x0 <- 0         #condicion inicial de SDE
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 900 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#estimacion bayesiana del OU caso 1
source("Ou-Chaos-functions-bayes-both.r")
source("EM_Ou_Estimador_Stefano.r")
source('Ou_Chaos_functions.R')
library('truncnorm')
#parámetros del proceso
alpha <- 1.001  # parametro fijo
beta0 <- 1.1    # parametro de inicialización
beta <- 1.2  # parametro real
Ti<- 1          # Horizonte de tiempo
TF <- Ti        #
n<- 1000        # número de puntos en el proceso original
delta <- Ti/n   # tamaño de paso del proceso original
TiempoC<-seq(0, Ti, length.out = n+1)
TL<-length(TiempoC)
Cond = TRUE
x0 <- 0         #condicion inicial de SDE
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 1200 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#estimacion bayesiana del OU caso 1
source("Ou-Chaos-functions-bayes-both.r")
source("EM_Ou_Estimador_Stefano.r")
source('Ou_Chaos_functions.R')
library('truncnorm')
#parámetros del proceso
alpha <- 1.001  # parametro fijo
beta0 <- 1.1    # parametro de inicialización
beta <- 1.2  # parametro real
Ti<- 1          # Horizonte de tiempo
TF <- Ti        #
n<- 1000        # número de puntos en el proceso original
delta <- Ti/n   # tamaño de paso del proceso original
TiempoC<-seq(0, Ti, length.out = n+1)
TL<-length(TiempoC)
Cond = TRUE
x0 <- 0         #condicion inicial de SDE
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 3200 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 2500 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#estimacion bayesiana del OU caso 1
source("Ou-Chaos-functions-bayes-both.r")
source("EM_Ou_Estimador_Stefano.r")
source('Ou_Chaos_functions.R')
library('truncnorm')
#parámetros del proceso
alpha <- 1.001  # parametro fijo
beta0 <- 0.91    # parametro de inicialización
beta <- 0.982  # parametro real
Ti<- 1          # Horizonte de tiempo
TF <- Ti        #
n<- 1000        # número de puntos en el proceso original
delta <- Ti/n   # tamaño de paso del proceso original
TiempoC<-seq(0, Ti, length.out = n+1)
TL<-length(TiempoC)
Cond = TRUE
x0 <- 0         #condicion inicial de SDE
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 2500 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
mean_pars = colMeans(parameters)
mean_alpha = mean_pars[1]
mean_beta = 1/mean_pars[2]
print(c(mean_alpha,mean_beta))
sprintf("alpha =  %f",mean_alpha)
sprintf("beta = %f",mean_beta)
quantile(parameters[,1],prob = c(0.025,0.975))
quantile(1/parameters[,2],prob = c(0.025,0.975))
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 2600 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
mean_pars = colMeans(parameters)
mean_alpha = mean_pars[1]
mean_beta = 1/mean_pars[2]
print(c(mean_alpha,mean_beta))
sprintf("alpha =  %f",mean_alpha)
sprintf("beta = %f",mean_beta)
quantile(parameters[,1],prob = c(0.025,0.975))
quantile(1/parameters[,2],prob = c(0.025,0.975))
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 2400 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#estimacion bayesiana del OU caso 1
source("Ou-Chaos-functions-bayes-both.r")
source("EM_Ou_Estimador_Stefano.r")
source('Ou_Chaos_functions.R')
library('truncnorm')
#parámetros del proceso
alpha <- 1.001  # parametro fijo
beta0 <- 0.91    # parametro de inicialización
beta <- 0.982  # parametro real
Ti<- 1          # Horizonte de tiempo
TF <- Ti        #
n<- 1000        # número de puntos en el proceso original
delta <- Ti/n   # tamaño de paso del proceso original
TiempoC<-seq(0, Ti, length.out = n+1)
TL<-length(TiempoC)
Cond = TRUE
x0 <- 0         #condicion inicial de SDE
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 2300 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
#estimacion bayesiana del OU caso 1
source("Ou-Chaos-functions-bayes-both.r")
source("EM_Ou_Estimador_Stefano.r")
source('Ou_Chaos_functions.R')
library('truncnorm')
#parámetros del proceso
alpha <- 1.001  # parametro fijo
beta0 <- 0.91    # parametro de inicialización
beta <- 0.982  # parametro real
Ti<- 1          # Horizonte de tiempo
TF <- Ti        #
n<- 1000        # número de puntos en el proceso original
delta <- Ti/n   # tamaño de paso del proceso original
TiempoC<-seq(0, Ti, length.out = n+1)
TL<-length(TiempoC)
Cond = TRUE
x0 <- 0         #condicion inicial de SDE
#parametro de la apriori es exponencial, con mean 1/lambda
lambda_1 <- 0.75
lambda_2 <- 2350 #1600
#numero de puntos en el puente
nb <- 10
#tamaño de muestra para alpha
M <- 500
#periodo de calentamiento
K<- 500
#número de puentes a utilizar en cada iteración
#Nbm <- 1000
Nrow<- 100000
X <- read.csv("PathX_A1.0_B1.0_T1_n1000.csv")
X<-as.numeric(X[,2])
Est_alpha<- Est_stefano_alpha(X,delta)
Est_beta <- Est_stefano_beta(X,Est_alpha,delta)
print(c(Est_alpha,Est_beta))
Xd <- Data_reduction(X,10)            # Reducción de datos (simulando que tenemos un cantidad pequeña de datos reales)
Tred <- Data_reduction(TiempoC,10)    # Reducción de tiempo respecto a los datos
No <- length(Xd)-1                    # número de puntos en el reducido
deltad <- Ti/No                       # tamaño de paso en el proceso reducido
################################################################################
################################################################################
################# Grafica del proceso original y reducido  #####################
par(mfrow = c(1, 2))
plot(X,type = "l")
plot(Xd,type = "l")
################################################################################
################################################################################
alpha_prior(lambda_1)
beta_prior(lambda_2)
parameters = NULL
probs = NULL
parameters = Gibb_OU_chaos_pars(Xd,nb,deltad,alpha,beta,lambda_1,lambda_2,K,M,Nrow,Nbm)
mean_pars = colMeans(parameters)
mean_alpha = mean_pars[1]
mean_beta = 1/mean_pars[2]
print(c(mean_alpha,mean_beta))
sprintf("alpha =  %f",mean_alpha)
sprintf("beta = %f",mean_beta)
quantile(parameters[,1],prob = c(0.025,0.975))
quantile(1/parameters[,2],prob = c(0.025,0.975))
write.csv(parameters,"Chaos_Data_alpha1.0_beta1.0_T1_lambda1_0.75lambda2_2350.csv")
